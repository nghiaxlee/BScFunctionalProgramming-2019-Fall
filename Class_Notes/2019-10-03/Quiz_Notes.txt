Start = isMember 5 [3 + 5, 7 - 1, (4 * 5), 25 / 5]
^
Start
isMember 5 [3 + 5, 7 - 1, (4 * 5), 25 / 5]
5 == (3+5)
5 == 8 --> False
or[False,False,False,True]
True

[Int] []
[Real]
[Bool] []
[[Int]]

f [x:xs]= x * f xs
Start = f [1..4]
^
Start
f [1..4]
f [1,2,3,4] //x = 1 xs = [2,3,4]
1 * f [2,3,4] //x=2 xs = [3,4]
1 * 2 * f[3,4] //x=3 xs = [4]
1 * 2 * 3 * f[4] //x=4 xs = [] //Int emptylist
1 * 2 * 3 * 4 * f[] //RUNTIME ERROR

[head:tail]
   ^first element
        ^everything else in the list.
[1,2,3,4]
[hd:tl]
hd = 1
tl = [2,3,4]
[1]
[hd:tl]
hd = 1
tl = [] //[Int]

f :: [Int] -> Int
f [] = 0
f [x : xs] = x + last xs

Start = f [5, 1, 3, 5]
^
Start
f [5,1,3,5] //x = 5 xs = [1,3,5]
5 + last [1,3,5]
5 + 5
10






